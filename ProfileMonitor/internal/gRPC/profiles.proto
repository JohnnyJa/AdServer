syntax = "proto3";

package profiles;

option go_package = "/proto";

service ProfilesService{
  rpc GetActiveProfiles (GetProfilesRequest) returns (GetProfilesResponse);
  rpc GetProfilesLimits (GetProfilesLimitsRequest) returns (GetProfilesLimitsResponse);
}

message GetProfilesRequest{}

message Creative {
  string id = 1;
  string media_url = 2;
  int32 width = 3;
  int32 height = 4;
  string creative_type = 5;
}

message Profile {
  string id = 1;
  string name = 2;
  float bid_price = 3;
  map<string, Creative> creatives = 4; // map[uuid]string -> Creative
  repeated string package_ids = 5;     // UUIDs як рядки
  map<string, string> profile_targeting = 6;

}

message GetProfilesResponse {
  repeated Profile profiles = 1;
}

message GetProfilesLimitsRequest{}

message ProfilesWithLimits {
  string id = 1;
  int32 views_limits = 2;
}

message GetProfilesLimitsResponse {
  repeated ProfilesWithLimits profilesWithLimits = 1;
}